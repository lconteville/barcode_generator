const form = document.getElementById("form");
const resultado = document.getElementById("resultado");

form.addEventListener("submit", (e) => {
  e.preventDefault();

  const project = document.getElementById("project").value; // ‚¨ÖÔ∏è novo campo
  const sigla = document.getElementById("inputLetras").value.trim().toUpperCase();
  const cancerCID = document.getElementById("cancertype").value;
  const centerID = document.getElementById("center").value;
  const doadores = document.getElementById("doador").value.split("\n").map(v => v.trim()).filter(v => v);
  const amostras = document.getElementById("amostra").value.split("\n").map(v => v.trim()).filter(v => v);
  const sampleType = document.getElementById("sampletype").value;
  const sampleStatus = document.getElementById("samplestatus").value;
  const samplePreservation = document.getElementById("samplepreservation").value;
  const analyteType = document.getElementById("analytetype").value;

  const showError = (msg) => {
    resultado.innerHTML = `<p style="color:red;">${msg}</p>`;
  };

  if (!project) return showError("‚ö†Ô∏è Selecione um projeto."); // ‚¨ÖÔ∏è valida√ß√£o nova
  if (!sigla) return showError("‚ö†Ô∏è A sigla deve ser preenchida.");
  if (!/^[A-Za-z]+$/.test(sigla)) return showError("‚ö†Ô∏è A sigla deve conter apenas letras (sem n√∫meros ou s√≠mbolos).");
  if (sigla.length !== 5) return showError("‚ö†Ô∏è A sigla deve ter exatamente 5 letras.");
  if (!cancerCID) return showError("‚ö†Ô∏è Selecione uma neoplasia prim√°ria.");
  if (!centerID) return showError("‚ö†Ô∏è Selecione o centro participante.");
  if (doadores.length === 0) return showError("‚ö†Ô∏è Informe pelo menos um c√≥digo de participante.");
  if (amostras.length === 0) return showError("‚ö†Ô∏è Informe pelo menos um c√≥digo de amostra.");
  if (doadores.length !== amostras.length) return showError("‚ö†Ô∏è Quantidade de participantes ‚â† quantidade de amostras!");
  if (!sampleType) return showError("‚ö†Ô∏è Selecione o tipo de amostra.");
  if (!sampleStatus) return showError("‚ö†Ô∏è Selecione o status da amostra.");
  if (!samplePreservation) return showError("‚ö†Ô∏è Selecione a preserva√ß√£o da amostra.");
  if (!analyteType) return showError("‚ö†Ô∏è Selecione o tipo de analito.");

  for (let i = 0; i < doadores.length; i++) {
    if (!/^\d{4}$/.test(doadores[i])) {
      return showError(`‚ö†Ô∏è C√≥digo de participante inv√°lido na linha ${i + 1}: "${doadores[i]}" (use 4 d√≠gitos).`);
    }
    if (!/^\d{4}$/.test(amostras[i])) {
      return showError(`‚ö†Ô∏è C√≥digo de amostra inv√°lido na linha ${i + 1}: "${amostras[i]}" (use 4 d√≠gitos).`);
    }
  }

  let codigosGerados = [];
  let linhasCSV = ["Projeto,Sigla,CID,Centro,Participante,Amostra,CodExtra,Barcode"]; // ‚¨ÖÔ∏è add Project no cabe√ßalho

  for (let i = 0; i < doadores.length; i++) {
    const doadorID = doadores[i];
    const sampleID = amostras[i];
    const codExtra = `${sampleType}${sampleStatus}${samplePreservation}${analyteType}`;
    const barcode = `${project}-${sigla}-${cancerCID}-${centerID}-${doadorID}-${sampleID}-${codExtra}`; // ‚¨ÖÔ∏è inclui project
    
    codigosGerados.push(barcode);
    linhasCSV.push(`${project},${sigla},${cancerCID},${centerID},${doadorID},${sampleID},${codExtra},${barcode}`); // ‚¨ÖÔ∏è inclui project
  }

  resultado.innerHTML = `
    <h3>Barcodes gerados:</h3>
    <pre>${codigosGerados.join("\n")}</pre>
    <button id="downloadCsvBtn" class="btn">üì• Baixar CSV</button>
  `;

  document.getElementById("downloadCsvBtn").addEventListener("click", () => {
    const blob = new Blob([linhasCSV.join("\n")], { type: "text/csv" });
    const link = document.createElement("a");
    link.href = URL.createObjectURL(blob);
    link.download = "barcodes.csv";
    link.click();
  });
});
